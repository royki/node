# This docker-compose file configures the localnet environment
# it contains the following services:
# - ZetaChain with 2 nodes (zetacore0, zetacore1). When profile set to stress, 4 nodes will be created.
# - A observer set with 2 clients (zetaclient0, zetaclient1). When profile set to stress, 4 clients will be created.
# - An Ethereum node (eth)
# - A secondary optional Ethereum node (eth2) enabled when profile is set to eth2
# - A Bitcoin node (bitcoin)
# - A Rosetta API (rosetta)
# - An orchestrator to manage interaction with the localnet (orchestrator)
# - An upgrade host to serve binaries for the upgrade tests (upgrade-host). Only enabled when profile is set to upgrade.
# - An upgrade orchestrator to send the upgrade governance proposal (upgrade-orchestrator). Only enabled when profile is set to upgrade.

networks:
  mynetwork:
    ipam:
      config:
        - subnet: 172.20.0.0/24
  eth:
    name: eth
    external: true

services:
  rosetta:
    image: zetanode:latest
    container_name: rosetta
    hostname: rosetta
    depends_on:
      zetacore0:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      mynetwork:
        ipv4_address: 172.20.0.200
    entrypoint: ["zetacored", "rosetta", "--tendermint", "zetacore0:26657", "--grpc", "zetacore0:9090", "--network", "athens_101-1", "--blockchain",  "zetacore"]
    volumes:
      - ssh:/root/.ssh

  zetacore0:
    image: zetanode:latest
    container_name: zetacore0
    hostname: zetacore0
    ports:
      - "1317:1317"
      - "9555:8545"
      - "9556:8546"
      - "26657:26657"
      - "6065:6060"
      - "9090:9090"
    healthcheck:
      # use the zevm endpoint for the healthcheck as it is the slowest to come up
      test: ["CMD", "curl", "-f", "-X", "POST", "--data", '{"jsonrpc":"2.0","method":"web3_clientVersion","params":[],"id":67}', "-H", "Content-Type: application/json", "http://localhost:8545"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: ${ZETACORED_START_PERIOD-30s}
      # start_interval: 1s
    networks:
      mynetwork:
        ipv4_address: 172.20.0.11
    entrypoint: ["/root/start-zetacored.sh"]
    environment:
      - HOTKEY_BACKEND=file
      - HOTKEY_PASSWORD=password # test purposes only
      - ZETACORED_IMPORT_GENESIS_DATA=${ZETACORED_IMPORT_GENESIS_DATA-}
    volumes:
      - ssh:/root/.ssh
      - ~/.zetacored/genesis_data:/root/genesis_data

  zetacore1:
    image: zetanode:latest
    container_name: zetacore1
    hostname: zetacore1
    networks:
      mynetwork:
        ipv4_address: 172.20.0.12
    entrypoint: ["/root/start-zetacored.sh"]
    environment:
      - HOTKEY_BACKEND=file
      - HOTKEY_PASSWORD=password # test purposes only
    volumes:
      - ssh:/root/.ssh

  zetacore2:
    image: zetanode:latest
    container_name: zetacore2
    hostname: zetacore2
    profiles:
      - stress
      - all
    networks:
      mynetwork:
        ipv4_address: 172.20.0.13
    entrypoint: [ "/root/start-zetacored.sh", "4" ]
    environment:
      - HOTKEY_BACKEND=file
      - HOTKEY_PASSWORD=password # test purposes only
    volumes:
      - ssh:/root/.ssh

  zetacore3:
    image: zetanode:latest
    container_name: zetacore3
    hostname: zetacore3
    profiles:
      - stress
      - all
    networks:
      mynetwork:
        ipv4_address: 172.20.0.14
    entrypoint: [ "/root/start-zetacored.sh", "4" ]
    environment:
      - HOTKEY_BACKEND=file
      - HOTKEY_PASSWORD=password # test purposes only
    volumes:
      - ssh:/root/.ssh

  zetaclient0:
    image: zetanode:latest
    container_name: zetaclient0
    hostname: zetaclient0
    networks:
      mynetwork:
        ipv4_address: 172.20.0.21
      eth:
    entrypoint: /root/start-zetaclientd.sh
    environment:
      - ETHDEV_ENDPOINT=http://l1:8545
      - HOTKEY_BACKEND=file
      - HOTKEY_PASSWORD=password # test purposes only
    volumes:
      - ssh:/root/.ssh
      - preparams:/root/preparams

  zetaclient1:
    image: zetanode:latest
    container_name: zetaclient1
    hostname: zetaclient1
    networks:
      mynetwork:
        ipv4_address: 172.20.0.22
      eth:
    entrypoint: /root/start-zetaclientd.sh
    environment:
      - ETHDEV_ENDPOINT=http://l1:8545
      - HOTKEY_BACKEND=file
      - HOTKEY_PASSWORD=password # test purposes only
    volumes:
      - ssh:/root/.ssh
      - preparams:/root/preparams

  zetaclient2:
    image: zetanode:latest
    container_name: zetaclient2
    hostname: zetaclient2
    profiles:
      - stress
      - all
    networks:
      mynetwork:
        ipv4_address: 172.20.0.23
      eth:
    entrypoint: /root/start-zetaclientd.sh
    environment:
      - HOTKEY_BACKEND=file
      - HOTKEY_PASSWORD=password # test purposes only
    volumes:
      - ssh:/root/.ssh
      - preparams:/root/preparams

  zetaclient3:
    image: zetanode:latest
    container_name: zetaclient3
    hostname: zetaclient3
    profiles:
      - stress
      - all
    networks:
      mynetwork:
        ipv4_address: 172.20.0.24
      eth:
    entrypoint: /root/start-zetaclientd.sh
    environment:
      - HOTKEY_BACKEND=file
      - HOTKEY_PASSWORD=password # test purposes only
    volumes:
      - ssh:/root/.ssh
      - preparams:/root/preparams

#  eth:
#    image: ethereum/client-go:v1.10.26
#    container_name: eth
#    hostname: eth
#    ports:
#      - "8545:8545"
#    networks:
#      mynetwork:
#        ipv4_address: 172.20.0.100
#    entrypoint: ["geth", "--dev", "--http", "--http.addr", "172.20.0.100", "--http.vhosts", "*", "--http.api", "eth,web3,net", "--http.corsdomain", "https://remix.ethereum.org", "--dev.period", "2"]

  eth2:
    build:
      context: ./anvil
    container_name: eth2
    hostname: eth2
    profiles:
      - eth2
      - all
    platform: linux/amd64
    ports:
      - "8566:8545"
    networks:
      mynetwork:
        ipv4_address: 172.20.0.102
      eth:

  bitcoin:
    image: ruimarinho/bitcoin-core:22 # version 23 is not working with btcd 0.22.0 due to change in createwallet rpc
    container_name: bitcoin
    hostname: bitcoin
    networks:
      mynetwork:
        ipv4_address: 172.20.0.101
    ports:
      - "18443:18443"
    command:
      -printtoconsole
      -regtest=1
      -rpcallowip=0.0.0.0/0
      -rpcbind=0.0.0.0
      -rpcauth=smoketest:63acf9b8dccecce914d85ff8c044b78b$$5892f9bbc84f4364e79f0970039f88bdd823f168d4acc76099ab97b14a766a99
      -txindex=1

  orchestrator:
    image: orchestrator:latest
    tty: true
    container_name: orchestrator
    depends_on:
      zetacore0:
        condition: service_healthy
#      eth:
#        condition: service_started
    hostname: orchestrator
    networks:
      mynetwork:
        ipv4_address: 172.20.0.2
      eth:
    entrypoint: ["/work/start-zetae2e.sh", "local"]
    environment:
      - LOCALNET_MODE=${LOCALNET_MODE-}
      - E2E_ARGS=${E2E_ARGS-}
      - UPGRADE_HEIGHT=${UPGRADE_HEIGHT-}
    volumes:
      - ssh:/root/.ssh

  upgrade-host:
    image: zetanode:latest
    container_name: upgrade-host
    hostname: upgrade-host
    profiles:
      - upgrade
      - all
    entrypoint: ["/root/start-upgrade-host.sh"]
    networks:
      mynetwork:
        ipv4_address: 172.20.0.250
    volumes:
      - ssh:/root/.ssh

  upgrade-orchestrator:
    # must run from old node for api compatibility
    image: zetanode:old
    container_name: upgrade-orchestrator
    hostname: upgrade-orchestrator
    profiles:
      - upgrade
      - all
    entrypoint: ["/root/start-upgrade-orchestrator.sh"]
    networks:
      mynetwork:
        ipv4_address: 172.20.0.251
    depends_on:
      - zetacore0
      - upgrade-host
    environment:
      - UPGRADE_HEIGHT=${UPGRADE_HEIGHT-}
    volumes:
      - ssh:/root/.ssh
volumes:
  ssh:
  preparams:
